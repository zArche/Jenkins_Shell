#!/bin/bash
DEBUG=false

action=$1

#为了避免奇奇怪怪的环境变量问题，所以用全路径的方式
shell_path="/home/arche/workspace/jenkins/shell"

function LOG_D(){
	if [ $DEBUG ];then
		echo $1
	fi
}

LOG_D "[*]action: $action"

case $action in
	"clone")
		url=$2
		project_name=${url##*/}
		project_name=${project_name%.*}
		LOG_D "[*]project name: $project_name"
		path=$3
		if [ ! -z $path ];then
			if [ ! -e $path ];then
				mkdir -p $path
			fi
			cd $path
		fi
		if [ -e ".git" ];then
                        LOG_D "[*]git reset --hard && git clean -xdf"
                        git reset --hard && git clean -xdf
			if [ ! -z $COMMONIT_BRANCH ];then 
		                LOG_D "[*]git branch: $COMMONIT_BRANCH"
        		        LOG_D "[*]checkout branch: git checkout $COMMONIT_BRANCH && git clean -xdf"
				git fetch
                		git checkout $COMMONIT_BRANCH && git clean -xdf
	        	fi

			if [ $? -ne 0 ];then
				echo "Branch not exist!" 
				$shell_path/email "git"
				exit 1
			fi
			LOG_D "[*]list branch: `git branch` "
			git pull
		else
			LOG_D "[*]pwd: `pwd`"
			#git clone $url
		        if [ ! -z $COMMONIT_BRANCH ];then
				git clone -b $COMMONIT_BRANCH $url . 
			else
				git clone $url .
			fi
			if [ $? -ne 0 ]; then
                        	echo "git clone failed!"
                                $shell_path/email "git"
				exit 1
                        fi 
		fi 
	;;
	"pull")
 		path=$2
		if [ ! -z $path ];then
			LOG_D "[*]project path: $path "
                        if [ ! -e $path ];then
                                echo "project not exist!"
				$shell_path/email "git"
				exit 1
                        fi
                        cd $path
                fi
		LOG_D "[*]git reset --hard && git clean -xdf"
                git reset --hard && git clean -xdf
		if [ -z $COMMONIT_LIBRARY_BRANCH ];then
			git checkout $COMMONIT_LIBRARY_BRANCH && git clean -xdf
          
                        if [ $? -ne 0 ];then
                                git reset --hard && git clean -xdf #checkout failed,first reset project
                                git checkout $COMMONIT_LIBRARY_BRANCH && git clean -xdf  #checkout again
                                if [ $? -ne 0 ]; then
                                        echo "Branch not exist!" #checkout failed again,judge as branch not exist and exist
                                        $shell_path/email "git"
                                        exit 1
                                fi
                        fi
                        LOG_D "[*]list branch: `git branch` "

		fi	
		git pull
	;;
esac

